/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.Student;

import Business.Book.Book;
import Business.Book.BookDirectory;
import Business.Enterprise.Enterprise;
import Business.Enterprise.LibraryEnterprise;
import Business.Organization.StudentOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BookRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cyyo
 */
public class BorrowBooksJPanel extends javax.swing.JPanel {
    private JPanel container;
    private UserAccount account;
    private LibraryEnterprise enterprise;
    private BookDirectory myLibrary;
    /**
     * Creates new form BorrowBooksJPanel
     */
    public BorrowBooksJPanel(JPanel container, UserAccount account, BookDirectory myLibrary, LibraryEnterprise enterprise) {
        this.container = container;
        this.account = account;
        this.myLibrary = myLibrary;
        this.enterprise = enterprise;
        initComponents();
        populateBook();
    }
    
    public void populateBook(){
        DefaultTableModel model = (DefaultTableModel) viewBookJTable.getModel();
        
        model.setRowCount(0);
        for (Book book : enterprise.getBookDirectory().getBookList()) {
                Object[] row = new Object[2];
                row[0] = book;
                row[1] = book.getStorage();
                model.addRow(row);
        }
        
        for(int i = model.getRowCount() - 1; i >= 0; i--){
            if(myLibrary.getBookList().contains((Book)viewBookJTable.getValueAt(i, 0))){
                model.removeRow(i);
            }
        }
        
        for(int i = model.getRowCount() - 1; i >= 0; i--){
            for(BookRequest bookRequest : account.getBookQueue().getBookRequestList())
                if(bookRequest.getStatus().equals("Accept") || bookRequest.getStatus().equals("Sent"))
                    if(bookRequest.getBookList().contains((Book)viewBookJTable.getValueAt(i, 0)))
                        model.removeRow(i);
        }
    }
    
    public void populateBook(String name){
        DefaultTableModel model = (DefaultTableModel) viewBookJTable.getModel();
        
        model.setRowCount(0);
        for (Book book : enterprise.getBookDirectory().getBookList()) {
            if(book.getName().equals(name)){
                Object[] row = new Object[2];
                row[0] = book;
                row[1] = book.getStorage();
                model.addRow(row);
            }
        }
        
        for(int i = model.getRowCount() - 1; i >= 0; i--){
            if(myLibrary.getBookList().contains((Book)viewBookJTable.getValueAt(i, 0))){
                model.removeRow(i);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewBookJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        searchBookjButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        nameTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        addjButton = new javax.swing.JButton();
        viewDetailjButton3 = new javax.swing.JButton();
        backJButton3 = new javax.swing.JButton();
        checkoutButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        viewBookJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Name", "Avilable Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewBookJTable);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Please select the book:");

        searchBookjButton.setText("Search");
        searchBookjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBookjButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Search by Book Nameï¼š");

        addjButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        addjButton.setText("Add to my Library");
        addjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addjButtonActionPerformed(evt);
            }
        });

        viewDetailjButton3.setText("View Detail");
        viewDetailjButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailjButton3ActionPerformed(evt);
            }
        });

        backJButton3.setText(" Back");
        backJButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton3ActionPerformed(evt);
            }
        });

        checkoutButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        checkoutButton.setText("Checkout");
        checkoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutButtonActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Business/Images/bbb.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(134, 134, 134)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchBookjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backJButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(viewDetailjButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBookjButton)
                            .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resetButton)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewDetailjButton3)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJButton3))
                .addContainerGap(43, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchBookjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBookjButtonActionPerformed
        String name = nameTxt.getText();
        populateBook(name);
    }//GEN-LAST:event_searchBookjButtonActionPerformed

    private void backJButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton3ActionPerformed
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backJButton3ActionPerformed

    private void viewDetailjButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailjButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewBookJTable.getSelectedRow();
        if(selectedRow >= 0){
                Book book = (Book)viewBookJTable.getValueAt(selectedRow, 0);
                BookDetailJPanel bookDetailJPanel = new BookDetailJPanel(container, book);
                container.add("bookDetailJPanel", bookDetailJPanel);
                CardLayout layout = (CardLayout) container.getLayout();
                layout.next(container);
            }
        else{
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_viewDetailjButton3ActionPerformed

    private void addjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addjButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = viewBookJTable.getSelectedRow();
        if(selectedRow >= 0){
            Book book = (Book)viewBookJTable.getValueAt(selectedRow, 0);
            if(myLibrary.getBookList().contains(book)){
                JOptionPane.showMessageDialog(null, "It's already in your cart!");
            }
            else{
                if(book.getStorage() == 0){
                    JOptionPane.showMessageDialog(null, "This book is out of stock");
                }
                else{
                    myLibrary.getBookList().add(book);
                    JOptionPane.showMessageDialog(null, "Add Successfully");
                    DefaultTableModel model = (DefaultTableModel) viewBookJTable.getModel();
                    populateBook();
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_addjButtonActionPerformed

    private void checkoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutButtonActionPerformed
        // TODO add your handling code here:
        CheckoutBooksJPanel checkoutBooksJPanel = new CheckoutBooksJPanel(container, account, myLibrary, enterprise);
        container.add("checkoutBooksJPanel", checkoutBooksJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_checkoutButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        populateBook();
    }//GEN-LAST:event_resetButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addjButton;
    private javax.swing.JButton backJButton3;
    private javax.swing.JButton checkoutButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton searchBookjButton;
    private javax.swing.JTable viewBookJTable;
    private javax.swing.JButton viewDetailjButton3;
    // End of variables declaration//GEN-END:variables
}
